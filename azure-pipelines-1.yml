# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- dev

pool:
  vmImage: ubuntu-24.04

variables:
  major: 2
  minor: 0
  packageName: 'Codeworx.Rest.Primitives'
  projects: 'src/Codeworx.Rest.Primitives;src/Codeworx.Rest.AspNetCore;src/Codeworx.Rest.Client;src/Codeworx.Rest.Tool.Cli;src/Codeworx.Rest.Formatters.Newtonsoft;src/Codeworx.Rest.Formatters.Protobuf'
  testProjects: './test/Codeworx.Rest.IntegrationTests/Codeworx.Rest.UnitTests.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: Install .net 9.0 sdk
  inputs:
    packageType: 'sdk'
    version: '9.x'
- task: DotNetCoreCLI@2
  displayName: Run dotnet test
  inputs:
    command: 'test'
    projects: '$(testProjects)'
    feedsToUse: 'select'
    versioningScheme: 'off'
- task: DotNetCoreCLI@2
  displayName: "Install package-version tool"
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install Codeworx.PackageVersion -g'

- task: DotNetCoreCLI@2
  displayName: "Get next PackageVersion"
  inputs:
    command: 'custom'
    custom: 'package-version'
    arguments: '$(packageName) -m $(major) -n $(minor) -o DevOps -p $(prerelease)'

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'restcontract_signkey.snk'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: 'restcontract_signkey.snk'
    TargetFolder: './private'

- task: DotNetCoreCLI@2
  displayName: "run dotnet pack"
  inputs:
    command: 'pack'
    packagesToPack: '$(projects)'
    configuration: '$(buildConfiguration)'
    versioningScheme: 'off'
    buildProperties: 'Version=$(PackageVersion);FileVersion=$(PackageVersionFileVersion);AssemblyVersion=$(major).0.0.0;SignAssembly=true;AssemblyOriginatorKeyFile=..\..\private\restcontract_signkey.snk'

- task: Bash@3
  displayName: "Update build version"
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      echo '##vso[build.updatebuildnumber]$(PackageVersion)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
