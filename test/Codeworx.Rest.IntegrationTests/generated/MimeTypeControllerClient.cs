// <auto-generated />
[assembly: Codeworx.Rest.RestProxy(typeof(global::Codeworx.Rest.UnitTests.Api.Contract.IMimeTypeController), typeof(Codeworx.Rest.UnitTests.Generated.MimeTypeControllerClient))]
namespace Codeworx.Rest.UnitTests.Generated
{
    public class MimeTypeControllerClient : Codeworx.Rest.Client.RestClient<global::Codeworx.Rest.UnitTests.Api.Contract.IMimeTypeController>, global::Codeworx.Rest.UnitTests.Api.Contract.IMimeTypeController
    {
        public MimeTypeControllerClient(Codeworx.Rest.Client.RestOptions<global::Codeworx.Rest.UnitTests.Api.Contract.IMimeTypeController> options) : base(options)
        {
        }

        public global::System.Threading.Tasks.Task<global::System.IO.Stream> GetPdf()
        {
            return CallAsync(c => c.GetPdf());
        }

        public global::System.Threading.Tasks.Task<global::System.IO.Stream> GetOctet()
        {
            return CallAsync(c => c.GetOctet());
        }

        public global::System.Threading.Tasks.Task<global::System.IO.Stream> GetPlainStream()
        {
            return CallAsync(c => c.GetPlainStream());
        }

        public global::System.Threading.Tasks.Task<string> GetPlainString()
        {
            return CallAsync(c => c.GetPlainString());
        }

        public global::System.Threading.Tasks.Task<string> PutText(string body)
        {
            return CallAsync(c => c.PutText(body));
        }

        public global::System.Threading.Tasks.Task<string> PutUri(global::System.Uri body)
        {
            return CallAsync(c => c.PutUri(body));
        }
    }
}