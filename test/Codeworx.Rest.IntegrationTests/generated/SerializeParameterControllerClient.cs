// <auto-generated />
[assembly: Codeworx.Rest.RestProxy(typeof(global::Codeworx.Rest.UnitTests.Api.Contract.ISerializeParameterController), typeof(Codeworx.Rest.UnitTests.Generated.SerializeParameterControllerClient))]
namespace Codeworx.Rest.UnitTests.Generated
{
    public class SerializeParameterControllerClient : Codeworx.Rest.Client.RestClient<global::Codeworx.Rest.UnitTests.Api.Contract.ISerializeParameterController>, global::Codeworx.Rest.UnitTests.Api.Contract.ISerializeParameterController
    {
        public SerializeParameterControllerClient(Codeworx.Rest.Client.RestOptions<global::Codeworx.Rest.UnitTests.Api.Contract.ISerializeParameterController> options) : base(options)
        {
        }

        public global::System.Threading.Tasks.Task<global::System.DateTime?> GetDateTimeBodyParameter(global::System.DateTime? parameter)
        {
            return CallAsync(c => c.GetDateTimeBodyParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<global::System.DateTime?> GetDateTimeQueryParameter(global::System.DateTime? parameter)
        {
            return CallAsync(c => c.GetDateTimeQueryParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<global::System.DateTime?> GetDateTimeUrlParameter(global::System.DateTime? parameter)
        {
            return CallAsync(c => c.GetDateTimeUrlParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<global::System.DateTimeOffset?> GetDateTimeOffsetBodyParameter(global::System.DateTimeOffset? parameter)
        {
            return CallAsync(c => c.GetDateTimeOffsetBodyParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<global::System.DateTimeOffset?> GetDateTimeOffsetQueryParameter(global::System.DateTimeOffset? parameter)
        {
            return CallAsync(c => c.GetDateTimeOffsetQueryParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<global::System.DateTimeOffset?> GetDateTimeOffsetUrlParameter(global::System.DateTimeOffset? parameter)
        {
            return CallAsync(c => c.GetDateTimeOffsetUrlParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<decimal?> GetDecimalBodyParameter(decimal? parameter)
        {
            return CallAsync(c => c.GetDecimalBodyParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<decimal?> GetDecimalQueryParameter(decimal? parameter)
        {
            return CallAsync(c => c.GetDecimalQueryParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<decimal?> GetDecimalUrlParameter(decimal? parameter)
        {
            return CallAsync(c => c.GetDecimalUrlParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<double?> GetDoubleBodyParameter(double? parameter)
        {
            return CallAsync(c => c.GetDoubleBodyParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<double?> GetDoubleQueryParameter(double? parameter)
        {
            return CallAsync(c => c.GetDoubleQueryParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<double?> GetDoubleUrlParameter(double? parameter)
        {
            return CallAsync(c => c.GetDoubleUrlParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<float?> GetFloatBodyParameter(float? parameter)
        {
            return CallAsync(c => c.GetFloatBodyParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<float?> GetFloatQueryParameter(float? parameter)
        {
            return CallAsync(c => c.GetFloatQueryParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<float?> GetFloatUrlParameter(float? parameter)
        {
            return CallAsync(c => c.GetFloatUrlParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<global::System.Guid?> GetGuidBodyParameter(global::System.Guid? parameter)
        {
            return CallAsync(c => c.GetGuidBodyParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<global::System.Collections.Generic.List<global::System.Guid>> GetGuidListBodyParameter(int id, global::System.Collections.Generic.List<global::System.Guid> parameter)
        {
            return CallAsync(c => c.GetGuidListBodyParameter(id, parameter));
        }

        public global::System.Threading.Tasks.Task<global::System.Collections.Generic.List<global::System.Guid>> GetGuidListQueryParameter(global::System.Collections.Generic.List<global::System.Guid> parameter)
        {
            return CallAsync(c => c.GetGuidListQueryParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<global::System.Collections.Generic.List<global::System.Guid>> GetGuidListUrlParameter(global::System.Collections.Generic.List<global::System.Guid> parameter)
        {
            return CallAsync(c => c.GetGuidListUrlParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<global::System.Guid?> GetGuidQueryParameter(global::System.Guid? parameter)
        {
            return CallAsync(c => c.GetGuidQueryParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<global::System.Guid?> GetGuidUrlParameter(global::System.Guid? parameter)
        {
            return CallAsync(c => c.GetGuidUrlParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<int?> GetIntBodyParameter(int? parameter)
        {
            return CallAsync(c => c.GetIntBodyParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<int?> GetIntQueryParameter(int? parameter)
        {
            return CallAsync(c => c.GetIntQueryParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<int?> GetIntUrlParameter(int? parameter)
        {
            return CallAsync(c => c.GetIntUrlParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<global::Codeworx.Rest.UnitTests.Model.Item> GetItemBodyParameter(global::Codeworx.Rest.UnitTests.Model.Item parameter)
        {
            return CallAsync(c => c.GetItemBodyParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<global::Codeworx.Rest.UnitTests.Model.Item> GetItemBodyParameterAsLastParameter(global::System.Guid id, string name, global::Codeworx.Rest.UnitTests.Model.Item parameter)
        {
            return CallAsync(c => c.GetItemBodyParameterAsLastParameter(id, name, parameter));
        }

        public global::System.Threading.Tasks.Task<global::Codeworx.Rest.UnitTests.Model.Item> GetItemBodyParameterWithNoAttribute(global::Codeworx.Rest.UnitTests.Model.Item parameter)
        {
            return CallAsync(c => c.GetItemBodyParameterWithNoAttribute(parameter));
        }

        public global::System.Threading.Tasks.Task<string> GetStringBodyParameter(string parameter)
        {
            return CallAsync(c => c.GetStringBodyParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<string> GetStringQueryParameter(string parameter)
        {
            return CallAsync(c => c.GetStringQueryParameter(parameter));
        }

        public global::System.Threading.Tasks.Task<string> GetStringUrlParameter(string parameter)
        {
            return CallAsync(c => c.GetStringUrlParameter(parameter));
        }
    }
}